---
// Get current page path for active state styling
const currentPath = Astro.url.pathname;

// Navigation items configuration
const navigationItems = [
  { href: "/", label: "Home" },
  { href: "/catalog", label: "Catálogo" },
  { href: "/contact", label: "Contacto" },
];

// Helper function to determine if current page matches navigation item
const isCurrentPage = (href: string) => {
  if (href === "/" && currentPath === "/") return true;
  if (href !== "/" && currentPath.startsWith(href)) return true;
  return false;
};
---

<script>
  // Mobile menu toggle functionality
  document.addEventListener("DOMContentLoaded", () => {
    const mobileMenuButton = document.getElementById("mobile-menu-button");
    const mobileMenu = document.getElementById("mobile-menu");

    if (mobileMenuButton && mobileMenu) {
      mobileMenuButton.addEventListener("click", () => {
        mobileMenu.classList.toggle("hidden");
        // Toggle aria-expanded attribute for accessibility
        const isExpanded =
          mobileMenuButton.getAttribute("aria-expanded") === "true" || false;
        mobileMenuButton.setAttribute(
          "aria-expanded",
          (!isExpanded).toString()
        );
      });
    }
  });
</script>

<!-- K8 Nutrition Header Component -->
<header class="bg-white shadow-sm font-sans">
  <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
    <div class="flex justify-between items-center h-16">
      <!-- Brand Logo -->
      <div class="flex-shrink-0">
        <a href="/" class="flex items-center">
          <img
            class="h-10 w-auto"
            src="/cabra_icon.svg"
            alt="K8 Nutrition Logo"
          />
          <span class="ml-2 text-xl font-bold text-black font-sans">
            K8 Nutrition
          </span>
        </a>
      </div>

      <!-- Desktop Navigation -->
      <nav class="hidden md:flex space-x-8">
        {
          navigationItems.map((item) => (
            <a
              href={item.href}
              class={`px-3 py-2 text-sm font-medium font-sans border-b-2 transition-colors duration-200 ${
                isCurrentPage(item.href)
                  ? "text-blue-600 border-blue-600"
                  : "text-gray-700 hover:text-blue-600 border-transparent hover:border-blue-600"
              }`}
              aria-current={isCurrentPage(item.href) ? "page" : undefined}
            >
              {item.label}
            </a>
          ))
        }
      </nav>

      <!-- Mobile Menu Toggle Button -->
      <div class="md:hidden flex items-center">
        <button
          id="mobile-menu-button"
          type="button"
          class="inline-flex items-center justify-center p-2 rounded-md text-gray-600 hover:text-gray-800 hover:bg-gray-100 focus:outline-none focus:ring-2 focus:ring-inset focus:ring-blue-500"
          aria-controls="mobile-menu"
          aria-expanded="false"
        >
          <span class="sr-only">Abrir menú principal</span>
          <!-- Hamburger Menu Icon -->
          <svg
            class="block h-6 w-6"
            xmlns="http://www.w3.org/2000/svg"
            fill="none"
            viewBox="0 0 24 24"
            stroke="currentColor"
            aria-hidden="true"
          >
            <path
              stroke-linecap="round"
              stroke-linejoin="round"
              stroke-width="2"
              d="M4 6h16M4 12h16M4 18h16"></path>
          </svg>
        </button>
      </div>
    </div>

    <!-- Mobile Navigation Menu -->
    <div class="md:hidden hidden" id="mobile-menu">
      <div class="px-2 pt-2 pb-3 space-y-1 bg-white border-t border-gray-200">
        {
          navigationItems.map((item) => (
            <a
              href={item.href}
              class={`block px-3 py-2 rounded-md text-base font-medium font-sans ${
                isCurrentPage(item.href)
                  ? "text-blue-600 bg-blue-50"
                  : "text-gray-700 hover:bg-gray-50 hover:text-blue-600"
              }`}
              aria-current={isCurrentPage(item.href) ? "page" : undefined}
            >
              {item.label}
            </a>
          ))
        }
      </div>
    </div>
  </div>
</header>
